<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>2017Spring 協同產品設計實習 (虎尾科大MDE)</title><link href="./" rel="alternate"></link><link href="./feeds/all.atom.xml" rel="self"></link><id>./</id><updated>2017-06-21T09:00:00+08:00</updated><entry><title>Week18 20170621</title><link href="./2017spring-cd%20W18.html" rel="alternate"></link><published>2017-06-21T09:00:00+08:00</published><updated>2017-06-21T09:00:00+08:00</updated><author><name>40423211</name></author><id>tag:,2017-06-21:./2017spring-cd W18.html</id><summary type="html">&lt;h3&gt;期末最後總整理&lt;/h3&gt;



&lt;h3&gt;1. 各組員是否依照 https://mde2a1.kmol.info/wiki?name=2017springcd 所列, 如實完成各週任務, 並拍攝操作影片？&lt;/h3&gt;

&lt;h3&gt;2. 各組員 OnShape 帳號中是否完成四足行走機構的設計？&lt;/h3&gt;

&lt;h3&gt;3. 各組員是否利用 V-rep 執行各週任務模擬, 並拍攝操作影片？&lt;/h3&gt;

&lt;h3&gt;4. 各組是否完成行走機構的實體製作、測試與討論.&lt;/h3&gt;

&lt;h3&gt;5. 各組是否將所設計完成的行走機構零件檔案提供在網誌中, 可讓其他人下載 (若非使用 OnShape 設計部份) 或複製 (若使用 OnShape 零組件需提供可複製之公開連結), 並忠實呈現四足行走機構的協同設計流程?&lt;/h3&gt;</summary><category term="syllabus"></category><category term="w18"></category></entry><entry><title>Week17 20170614 上課測驗</title><link href="./2017spring-cd%20W17.html" rel="alternate"></link><published>2017-06-14T09:00:00+08:00</published><updated>2017-06-14T09:00:00+08:00</updated><author><name>40423211</name></author><id>tag:,2017-06-14:./2017spring-cd W17.html</id><summary type="html">&lt;!-- PELICAN_END_SUMMARY --&gt;</summary><category term="syllabus"></category><category term="w17"></category></entry><entry><title>Week16 20170607</title><link href="./2017spring-cd%20W16.html" rel="alternate"></link><published>2017-06-07T09:00:00+08:00</published><updated>2017-06-07T09:00:00+08:00</updated><author><name>40423211</name></author><id>tag:,2017-06-07:./2017spring-cd W16.html</id><summary type="html">&lt;!-- PELICAN_END_SUMMARY --&gt;

&lt;h3&gt;一開始練習如何遠端連結Fossil伺服器&lt;/h3&gt;

&lt;h3&gt;之後老師讓我們旁聽學長們的專題報告&lt;/h3&gt;

&lt;h3&gt;並要我們準備下周的上台報告&lt;/h3&gt;</summary><category term="syllabus"></category><category term="w16"></category></entry><entry><title>協同產品設計實習第十五週練習</title><link href="./2017spring-cd%20W15.html" rel="alternate"></link><published>2017-05-31T09:00:00+08:00</published><updated>2017-05-31T09:00:00+08:00</updated><author><name>40423211</name></author><id>tag:,2017-05-31:./2017spring-cd W15.html</id><summary type="html">&lt;h3&gt;一.繪製課堂上老師所指定的作業&lt;/h3&gt;



&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h3&gt;1. 請以 W15 練習為網誌標題, 800x600 為畫布大小, 在畫布正中央畫一個半徑為 250 畫素, 壓力角 20, 齒數為 36 齒, 且只有上半齒形的漸開線正齒輪輪廓.&lt;/h3&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;!-- 啟動 Brython --&gt;

&lt;script&gt;
window.onload=function(){
// 設定 data/py 為共用程式路徑
brython({debug:1, pythonpath:['./../data/py']});
}
&lt;/script&gt;

&lt;!-- 以下實際利用  Brython 繪圖--&gt;

&lt;canvas id="onegear" width="800" height="600"&gt;&lt;/canvas&gt;

&lt;div id="onegear_div" width="800" height="20"&gt;&lt;/div&gt;

&lt;script type="text/python3"&gt;
from browser import document as doc
import math

# deg 為角度轉為徑度的轉換因子
deg = math.pi/180.
# 定義 Spur 類別
class Spur(object):
    def __init__(self, ctx):
        self.ctx = ctx

    def create_line(self, x1, y1, x2, y2, width=3, fill="red"):
        self.ctx.beginPath()
        self.ctx.lineWidth = width
        self.ctx.moveTo(x1, y1)
        self.ctx.lineTo(x2, y2)
        self.ctx.strokeStyle = fill
        self.ctx.stroke()
    #
    # 定義一個繪正齒輪的繪圖函式
    # midx 為齒輪圓心 x 座標
    # midy 為齒輪圓心 y 座標
    # rp 為節圓半徑, n 為齒數
    # pa 為壓力角 (deg)
    # rot 為旋轉角 (deg)
    # 已經針對 n 大於等於 52 齒時的繪圖錯誤修正, 因為 base circle 與齒根圓大小必須進行判斷
    def Gear(self, midx, midy, rp, n=20, pa=20, color="black"):
        # 齒輪漸開線分成 15 線段繪製
        imax = 15
        # 在輸入的畫布上繪製直線, 由圓心到節圓 y 軸頂點畫一直線
        self.create_line(midx, midy, midx, midy-rp)

        a=2*rp/n
        # d 為齒根大小, 為模數的 1.157 或 1.25倍, 這裡採 1.25 倍
        d=2.5*rp/n
        # ra 為齒輪的外圍半徑
        ra=rp+a

        rb=rp*math.cos(pa*deg)

        rd=rp-d
        # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd
        # 畫出 rd 圓 (齒根圓), 畫圓函式尚未定義
        #create_oval(midx-rd, midy-rd, midx+rd, midy+rd, width=1)
        # dr 則為基圓到齒頂圓半徑分成 imax 段後的每段半徑增量大小
        # 將圓弧分成 imax 段來繪製漸開線
        # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd
        if rd&gt;rb:
            dr = (ra-rd)/imax
        else:
            dr=(ra-rb)/imax
        # tan(pa*deg)-pa*deg 為漸開線函數
        sigma=math.pi/(2*n)+math.tan(pa*deg)-pa*deg
        for j in range(n):
            ang=-2.*j*math.pi/n+sigma
            ang2=2.*j*math.pi/n+sigma
            lxd=midx+rd*math.sin(ang2-2.*math.pi/n)
            lyd=midy-rd*math.cos(ang2-2.*math.pi/n)
            for i in range(imax+1):
                # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd
                if rd&gt;rb:
                    r=rd+i*dr
                else:
                    r=rb+i*dr
                theta=math.sqrt((r*r)/(rb*rb)-1.)
                alpha=theta-math.atan(theta)
                xpt=r*math.sin(alpha-ang)
                ypt=r*math.cos(alpha-ang)
                xd=rd*math.sin(-ang)
                yd=rd*math.cos(-ang)
                # i=0 時, 繪線起點由齒根圓上的點, 作為起點
                if(i==0):
                    last_x = midx+xd
                    last_y = midy-yd
                # 由左側齒根圓作為起點, 除第一點 (xd,yd) 齒根圓上的起點外, 其餘的 (xpt,ypt)則為漸開線上的分段點
                self.create_line((midx+xpt),(midy-ypt),(last_x),(last_y),fill=color)
                # 最後一點, 則為齒頂圓
                if(i==imax):
                    lfx=midx+xpt
                    lfy=midy-ypt
                last_x = midx+xpt
                last_y = midy-ypt
            # the line from last end of dedendum point to the recent
            # end of dedendum point
            # lxd 為齒根圓上的左側 x 座標, lyd 則為 y 座標
            # 下列為齒根圓上用來近似圓弧的直線
            self.create_line((lxd),(lyd),(midx+xd),(midy-yd),fill=color)
            for i in range(imax+1):
                # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd
                if rd&gt;rb:
                    r=rd+i*dr
                else:
                    r=rb+i*dr
                theta=math.sqrt((r*r)/(rb*rb)-1.)
                alpha=theta-math.atan(theta)
                xpt=r*math.sin(ang2-alpha)
                ypt=r*math.cos(ang2-alpha)
                xd=rd*math.sin(ang2)
                yd=rd*math.cos(ang2)
                # i=0 時, 繪線起點由齒根圓上的點, 作為起點
                if(i==0):
                    last_x = midx+xd
                    last_y = midy-yd
                # 由右側齒根圓作為起點, 除第一點 (xd,yd) 齒根圓上的起點外, 其餘的 (xpt,ypt)則為漸開線上的分段點
                self.create_line((midx+xpt),(midy-ypt),(last_x),(last_y),fill=color)
                # 最後一點, 則為齒頂圓
                if(i==imax):
                    rfx=midx+xpt
                    rfy=midy-ypt
                last_x = midx+xpt
                last_y = midy-ypt
            # lfx 為齒頂圓上的左側 x 座標, lfy 則為 y 座標
            # 下列為齒頂圓上用來近似圓弧的直線
            self.create_line(lfx,lfy,rfx,rfy,fill=color)
canvas = doc['onegear']
ctx = canvas.getContext("2d")
x = (canvas.width)/2
y = (canvas.height)/2
r = 250
# 齒數
n = 36
# 壓力角
pa = 20
Spur(ctx).Gear(x, y, r, n, pa, "blue")

ctx.beginPath()
ctx.fillStyle = "#0000cd"
ctx.font = "50px Arial"
ctx.fillText("40423211 ",300,400)
ctx.stroke()

&lt;/script&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h3&gt;影片&lt;/h3&gt;

&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/Xh3qppVNY88" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;h3&gt;2. 完成後, 請在正齒輪中央寫上自己的學號, 並建立第二個 800x600 的畫布, 請畫出只有一齒輪廓, 且充滿畫布 80% 範圍的正齒輪, 且該齒輪廓下方水平線, 連接兩端齒根圓點交的直線以紅色繪製, 且在齒輪下方以藍色字元寫上自己的學號.&lt;/h3&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;!-- 導入 Brython 標準程式庫 --&gt;

&lt;script src="../data/Brython-3.3.1/brython.js"&gt;&lt;/script&gt;

&lt;script src="../data/Brython-3.3.1/brython_stdlib.js"&gt;&lt;/script&gt;

&lt;!-- 啟動 Brython --&gt;

&lt;script&gt;
window.onload=function(){
// 設定 data/py 為共用程式路徑
brython({debug:1, pythonpath:['./../data/py']});
}
&lt;/script&gt;

&lt;!-- 以下實際利用  Brython 繪圖--&gt;

&lt;canvas id="onegear2" width="800" height="600"&gt;&lt;/canvas&gt;

&lt;div id="onegear2_div" width="800" height="20"&gt;&lt;/div&gt;

&lt;script type="text/python3"&gt;
from browser import document as doc
import math
# deg 為角度轉為徑度的轉換因子
deg = math.pi/180.
# 定義 Spur 類別
class Spur(object):
    def __init__(self, ctx):
        self.ctx = ctx

    def create_line(self, x1, y1, x2, y2, width=3, fill="red"):
        self.ctx.beginPath()
        self.ctx.lineWidth = width
        self.ctx.moveTo(x1, y1)
        self.ctx.lineTo(x2, y2)
        self.ctx.strokeStyle = fill
        self.ctx.stroke()
    #
    # 定義一個繪正齒輪的繪圖函式
    # midx 為齒輪圓心 x 座標
    # midy 為齒輪圓心 y 座標
    # rp 為節圓半徑, n 為齒數
    # pa 為壓力角 (deg)
    # rot 為旋轉角 (deg)
    # 已經針對 n 大於等於 52 齒時的繪圖錯誤修正, 因為 base circle 與齒根圓大小必須進行判斷
    def Gear(self, midx, midy, rp, n=20, pa=20, color="black"):
        # 齒輪漸開線分成 15 線段繪製
        imax = 7

        a=2*rp/n
        # d 為齒根大小, 為模數的 1.157 或 1.25倍, 這裡採 1.25 倍
        d=2.5*rp/n
        # ra 為齒輪的外圍半徑
        ra=rp+a

        rb=rp*math.cos(pa*deg)

        rd=rp-d
        # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd
        # 畫出 rd 圓 (齒根圓), 畫圓函式尚未定義
        #create_oval(midx-rd, midy-rd, midx+rd, midy+rd, width=1)
        # dr 則為基圓到齒頂圓半徑分成 imax 段後的每段半徑增量大小
        # 將圓弧分成 imax 段來繪製漸開線
        # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd
        if rd&gt;rb:
            dr = (ra-rd)/imax
        else:
            dr=(ra-rb)/imax
        # tan(pa*deg)-pa*deg 為漸開線函數
        sigma=math.pi/(2*n)+math.tan(pa*deg)-pa*deg
        for j in range(n):
            ang=-2.*j*math.pi/n+sigma
            ang2=2.*j*math.pi/n+sigma
            lxd=midx+rd*math.sin(ang2-2.*math.pi/n)
            lyd=midy-rd*math.cos(ang2-2.*math.pi/n)
            for i in range(imax+1):
                # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd
                if rd&gt;rb:
                    r=rd+i*dr
                else:
                    r=rb+i*dr
                theta=math.sqrt((r*r)/(rb*rb)-1.)
                alpha=theta-math.atan(theta)
                xpt=r*math.sin(alpha-ang)
                ypt=r*math.cos(alpha-ang)
                xd=rd*math.sin(-ang)
                yd=rd*math.cos(-ang)
                # i=0 時, 繪線起點由齒根圓上的點, 作為起點
                if(i==0):
                    last_x = midx+xd
                    last_y = midy-yd
                # 由左側齒根圓作為起點, 除第一點 (xd,yd) 齒根圓上的起點外, 其餘的 (xpt,ypt)則為漸開線上的分段點
                self.create_line((midx+xpt),(midy-ypt),(last_x),(last_y),fill=color)
                # 最後一點, 則為齒頂圓
                if(i==imax):
                    lfx=midx+xpt
                    lfy=midy-ypt
                last_x = midx+xpt
                last_y = midy-ypt
            # the line from last end of dedendum point to the recent
            # end of dedendum point
            # lxd 為齒根圓上的左側 x 座標, lyd 則為 y 座標
            # 下列為齒根圓上用來近似圓弧的直線
            self.create_line((lxd),(lyd),(midx+xd),(midy-yd),fill=color)
            for i in range(imax+1):
                # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd
                if rd&gt;rb:
                    r=rd+i*dr
                else:
                    r=rb+i*dr
                theta=math.sqrt((r*r)/(rb*rb)-1.)
                alpha=theta-math.atan(theta)
                xpt=r*math.sin(ang2-alpha)
                ypt=r*math.cos(ang2-alpha)
                xd=rd*math.sin(ang2)
                yd=rd*math.cos(ang2)
                # i=0 時, 繪線起點由齒根圓上的點, 作為起點
                if(i==0):
                    last_x = midx+xd
                    last_y = midy-yd
                # 由右側齒根圓作為起點, 除第一點 (xd,yd) 齒根圓上的起點外, 其餘的 (xpt,ypt)則為漸開線上的分段點
                self.create_line((midx+xpt),(midy-ypt),(last_x),(last_y),fill=color)
                # 最後一點, 則為齒頂圓
                if(i==imax):
                    rfx=midx+xpt
                    rfy=midy-ypt
                last_x = midx+xpt
                last_y = midy-ypt
            # lfx 為齒頂圓上的左側 x 座標, lfy 則為 y 座標
            # 下列為齒頂圓上用來近似圓弧的直線
            self.create_line(lfx,lfy,rfx,rfy,fill=color)
canvas = doc['onegear2']
ctx = canvas.getContext("2d")
x = (canvas.width)/2
y = (canvas.height)/2
r = 0.8*(canvas.height/2)
# 齒數
n = 36
# 壓力角
pa = 20
Spur(ctx).Gear(x, y, r, n, pa, "blue")
ctx.beginPath() 
ctx.lineWidth="600"
ctx.strokeStyle="white"
ctx.moveTo(0,600) 
ctx.lineTo(800,600) 
ctx.stroke()

ctx.beginPath() 
ctx.lineWidth="3"
ctx.strokeStyle="red"
ctx.moveTo(146,300) 
ctx.lineTo(654,300) 
ctx.stroke()

ctx.beginPath()
ctx.fillStyle = "#0000cd"
ctx.font = "50px Arial"
ctx.fillText("40423211 ",300,400)
ctx.stroke()

&lt;/script&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h3&gt;影片&lt;/h3&gt;

&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/G1OnnCcm4l4" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;</summary><category term="syllabus"></category><category term="w15"></category></entry><entry><title>Week13 20170517</title><link href="./2017spring-cd%20W13.html" rel="alternate"></link><published>2017-05-17T11:00:00+08:00</published><updated>2017-05-17T11:00:00+08:00</updated><author><name>40423211</name></author><id>tag:,2017-05-17:./2017spring-cd W13.html</id><summary type="html">&lt;h3&gt;一.與組員協同設計一個行走機構並用分工合作的方式完成&lt;/h3&gt;



&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h3&gt;一.組合行走機構所需零件&lt;/h3&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/Wg1LIs-5tts" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/ZIrGiaW2Ehk" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/uqxtYbNhdwY" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/q3M4M32awwk" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/cpV9BTY0CBs" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/CEsMALOzmWg" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/-LePgyVeNik" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h3&gt;二.行走機構組合&lt;/h3&gt;

&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/v6OQooOSTWA" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;h3&gt;三.行走機構作動&lt;/h3&gt;

&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/xQAaD1CxIIo" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;</summary><category term="syllabus"></category><category term="w13"></category></entry><entry><title>Week11 20170503</title><link href="./2017spring-cd%20W11.html" rel="alternate"></link><published>2017-05-03T11:00:00+08:00</published><updated>2017-05-03T11:00:00+08:00</updated><author><name>40423211</name></author><id>tag:,2017-05-03:./2017spring-cd W11.html</id><summary type="html">&lt;h3&gt;一.利用漸開線原理, 以 Brython 繪製單一正齒輪廓&lt;/h3&gt;

&lt;h3&gt;二利用 Brython 繪製兩種正齒輪嚙合的協同繪圖&lt;/h3&gt;



&lt;h3&gt;一.&lt;/h3&gt;

&lt;!-- PELICAN_END_SUMMARY --&gt;

&lt;!-- 導入 Brython 標準程式庫 --&gt;

&lt;script src="../data/Brython-3.3.1/brython.js"&gt;&lt;/script&gt;

&lt;script src="../data/Brython-3.3.1/brython_stdlib.js"&gt;&lt;/script&gt;

&lt;!-- 啟動 Brython --&gt;

&lt;script&gt;
window.onload=function(){
// 設定 data/py 為共用程式路徑
brython({debug:1, pythonpath:['./../data/py']});
}
&lt;/script&gt;

&lt;!-- 以下實際利用  Brython 繪圖--&gt;

&lt;canvas id="onegear" width="800" height="600"&gt;&lt;/canvas&gt;

&lt;div id="onegear_div" width="800" height="20"&gt;&lt;/div&gt;

&lt;script type="text/python3"&gt;
from browser import document as doc
import math
# deg 為角度轉為徑度的轉換因子
deg = math.pi/180.
# 定義 Spur 類別
class Spur(object):
    def __init__(self, ctx):
        self.ctx = ctx

    def create_line(self, x1, y1, x2, y2, width=3, fill="red"):
        self.ctx.beginPath()
        self.ctx.lineWidth = width
        self.ctx.moveTo(x1, y1)
        self.ctx.lineTo(x2, y2)
        self.ctx.strokeStyle = fill
        self.ctx.stroke()
    #
    # 定義一個繪正齒輪的繪圖函式
    # midx 為齒輪圓心 x 座標
    # midy 為齒輪圓心 y 座標
    # rp 為節圓半徑, n 為齒數
    # pa 為壓力角 (deg)
    # rot 為旋轉角 (deg)
    # 已經針對 n 大於等於 52 齒時的繪圖錯誤修正, 因為 base circle 與齒根圓大小必須進行判斷
    def Gear(self, midx, midy, rp, n=20, pa=20, color="black"):
        # 齒輪漸開線分成 15 線段繪製
        imax = 15
        # 在輸入的畫布上繪製直線, 由圓心到節圓 y 軸頂點畫一直線
        self.create_line(midx, midy, midx, midy-rp)
        # 畫出 rp 圓, 畫圓函式尚未定義
        #create_oval(midx-rp, midy-rp, midx+rp, midy+rp, width=2)
        # a 為模數 (代表公制中齒的大小), 模數為節圓直徑(稱為節徑)除以齒數
        # 模數也就是齒冠大小
        a=2*rp/n
        # d 為齒根大小, 為模數的 1.157 或 1.25倍, 這裡採 1.25 倍
        d=2.5*rp/n
        # ra 為齒輪的外圍半徑
        ra=rp+a
        # 畫出 ra 圓, 畫圓函式尚未定義
        #create_oval(midx-ra, midy-ra, midx+ra, midy+ra, width=1)
        # rb 則為齒輪的基圓半徑
        # 基圓為漸開線長齒之基準圓
        rb=rp*math.cos(pa*deg)
        # 畫出 rb 圓 (基圓), 畫圓函式尚未定義
        #create_oval(midx-rb, midy-rb, midx+rb, midy+rb, width=1)
        # rd 為齒根圓半徑
        rd=rp-d
        # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd
        # 畫出 rd 圓 (齒根圓), 畫圓函式尚未定義
        #create_oval(midx-rd, midy-rd, midx+rd, midy+rd, width=1)
        # dr 則為基圓到齒頂圓半徑分成 imax 段後的每段半徑增量大小
        # 將圓弧分成 imax 段來繪製漸開線
        # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd
        if rd&gt;rb:
            dr = (ra-rd)/imax
        else:
            dr=(ra-rb)/imax
        # tan(pa*deg)-pa*deg 為漸開線函數
        sigma=math.pi/(2*n)+math.tan(pa*deg)-pa*deg
        for j in range(n):
            ang=-2.*j*math.pi/n+sigma
            ang2=2.*j*math.pi/n+sigma
            lxd=midx+rd*math.sin(ang2-2.*math.pi/n)
            lyd=midy-rd*math.cos(ang2-2.*math.pi/n)
            for i in range(imax+1):
                # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd
                if rd&gt;rb:
                    r=rd+i*dr
                else:
                    r=rb+i*dr
                theta=math.sqrt((r*r)/(rb*rb)-1.)
                alpha=theta-math.atan(theta)
                xpt=r*math.sin(alpha-ang)
                ypt=r*math.cos(alpha-ang)
                xd=rd*math.sin(-ang)
                yd=rd*math.cos(-ang)
                # i=0 時, 繪線起點由齒根圓上的點, 作為起點
                if(i==0):
                    last_x = midx+xd
                    last_y = midy-yd
                # 由左側齒根圓作為起點, 除第一點 (xd,yd) 齒根圓上的起點外, 其餘的 (xpt,ypt)則為漸開線上的分段點
                self.create_line((midx+xpt),(midy-ypt),(last_x),(last_y),fill=color)
                # 最後一點, 則為齒頂圓
                if(i==imax):
                    lfx=midx+xpt
                    lfy=midy-ypt
                last_x = midx+xpt
                last_y = midy-ypt
            # the line from last end of dedendum point to the recent
            # end of dedendum point
            # lxd 為齒根圓上的左側 x 座標, lyd 則為 y 座標
            # 下列為齒根圓上用來近似圓弧的直線
            self.create_line((lxd),(lyd),(midx+xd),(midy-yd),fill=color)
            for i in range(imax+1):
                # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd
                if rd&gt;rb:
                    r=rd+i*dr
                else:
                    r=rb+i*dr
                theta=math.sqrt((r*r)/(rb*rb)-1.)
                alpha=theta-math.atan(theta)
                xpt=r*math.sin(ang2-alpha)
                ypt=r*math.cos(ang2-alpha)
                xd=rd*math.sin(ang2)
                yd=rd*math.cos(ang2)
                # i=0 時, 繪線起點由齒根圓上的點, 作為起點
                if(i==0):
                    last_x = midx+xd
                    last_y = midy-yd
                # 由右側齒根圓作為起點, 除第一點 (xd,yd) 齒根圓上的起點外, 其餘的 (xpt,ypt)則為漸開線上的分段點
                self.create_line((midx+xpt),(midy-ypt),(last_x),(last_y),fill=color)
                # 最後一點, 則為齒頂圓
                if(i==imax):
                    rfx=midx+xpt
                    rfy=midy-ypt
                last_x = midx+xpt
                last_y = midy-ypt
            # lfx 為齒頂圓上的左側 x 座標, lfy 則為 y 座標
            # 下列為齒頂圓上用來近似圓弧的直線
            self.create_line(lfx,lfy,rfx,rfy,fill=color)
canvas = doc['onegear']
ctx = canvas.getContext("2d")
x = (canvas.width)/2
y = (canvas.height)/2
r = 0.8*(canvas.height/2)
# 齒數
n = 53
# 壓力角
pa = 20
Spur(ctx).Gear(x, y, r, n, pa, "blue")
&lt;/script&gt;

&lt;h3&gt;二.&lt;/h3&gt;

&lt;canvas id="gear3" width="800" height="400"&gt;&lt;/canvas&gt;

&lt;script type="text/python3"&gt;
# 導入 browser 模組中的 document, 並設為 doc 變數
from browser import document as doc
import math
# deg 為角度轉為徑度的轉換因子
deg = math.pi/180.
# 定義 Spur 類別
class Spur(object):
    def __init__(self, ctx):
        self.ctx = ctx

    def create_line(self, x1, y1, x2, y2, width=3, fill="red"):
        self.ctx.beginPath()
        self.ctx.lineWidth = width
        self.ctx.moveTo(x1, y1)
        self.ctx.lineTo(x2, y2)
        self.ctx.strokeStyle = fill
        self.ctx.stroke()
    #
    # 定義一個繪正齒輪的繪圖函式
    # midx 為齒輪圓心 x 座標
    # midy 為齒輪圓心 y 座標
    # rp 為節圓半徑, n 為齒數
    # pa 為壓力角 (deg)
    # rot 為旋轉角 (deg)
    # 已經針對 n 大於等於 52 齒時的繪圖錯誤修正, 因為 base circle 與齒根圓大小必須進行判斷
    def Gear(self, midx, midy, rp, n=20, pa=20, color="black"):
        # 齒輪漸開線分成 15 線段繪製
        imax = 15
        # 在輸入的畫布上繪製直線, 由圓心到節圓 y 軸頂點畫一直線
        self.create_line(midx, midy, midx, midy-rp)
        # 畫出 rp 圓, 畫圓函式尚未定義
        #create_oval(midx-rp, midy-rp, midx+rp, midy+rp, width=2)
        # a 為模數 (代表公制中齒的大小), 模數為節圓直徑(稱為節徑)除以齒數
        # 模數也就是齒冠大小
        a=2*rp/n
        # d 為齒根大小, 為模數的 1.157 或 1.25倍, 這裡採 1.25 倍
        d=2.5*rp/n
        # ra 為齒輪的外圍半徑
        ra=rp+a
        # 畫出 ra 圓, 畫圓函式尚未定義
        #create_oval(midx-ra, midy-ra, midx+ra, midy+ra, width=1)
        # rb 則為齒輪的基圓半徑
        # 基圓為漸開線長齒之基準圓
        rb=rp*math.cos(pa*deg)
        # 畫出 rb 圓 (基圓), 畫圓函式尚未定義
        #create_oval(midx-rb, midy-rb, midx+rb, midy+rb, width=1)
        # rd 為齒根圓半徑
        rd=rp-d
        # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd
        # 畫出 rd 圓 (齒根圓), 畫圓函式尚未定義
        #create_oval(midx-rd, midy-rd, midx+rd, midy+rd, width=1)
        # dr 則為基圓到齒頂圓半徑分成 imax 段後的每段半徑增量大小
        # 將圓弧分成 imax 段來繪製漸開線
        # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd
        if rd&gt;rb:
            dr = (ra-rd)/imax
        else:
            dr=(ra-rb)/imax
        # tan(pa*deg)-pa*deg 為漸開線函數
        sigma=math.pi/(2*n)+math.tan(pa*deg)-pa*deg
        for j in range(n):
            ang=-2.*j*math.pi/n+sigma
            ang2=2.*j*math.pi/n+sigma
            lxd=midx+rd*math.sin(ang2-2.*math.pi/n)
            lyd=midy-rd*math.cos(ang2-2.*math.pi/n)
            for i in range(imax+1):
                # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd
                if rd&gt;rb:
                    r=rd+i*dr
                else:
                    r=rb+i*dr
                theta=math.sqrt((r*r)/(rb*rb)-1.)
                alpha=theta-math.atan(theta)
                xpt=r*math.sin(alpha-ang)
                ypt=r*math.cos(alpha-ang)
                xd=rd*math.sin(-ang)

                yd=rd*math.cos(-ang)
                # i=0 時, 繪線起點由齒根圓上的點, 作為起點
                if(i==0):
                    last_x = midx+xd
                    last_y = midy-yd
                # 由左側齒根圓作為起點, 除第一點 (xd,yd) 齒根圓上的起點外, 其餘的 (xpt,ypt)則為漸開線上的分段點
                self.create_line((midx+xpt),(midy-ypt),(last_x),(last_y),fill=color)
                # 最後一點, 則為齒頂圓
                if(i==imax):
                    lfx=midx+xpt
                    lfy=midy-ypt
                last_x = midx+xpt
                last_y = midy-ypt
            # the line from last end of dedendum point to the recent
            # end of dedendum point
            # lxd 為齒根圓上的左側 x 座標, lyd 則為 y 座標
            # 下列為齒根圓上用來近似圓弧的直線
            self.create_line((lxd),(lyd),(midx+xd),(midy-yd),fill=color)
            for i in range(imax+1):
                # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd
                if rd&gt;rb:
                    r=rd+i*dr
                else:
                    r=rb+i*dr
                theta=math.sqrt((r*r)/(rb*rb)-1.)
                alpha=theta-math.atan(theta)
                xpt=r*math.sin(ang2-alpha)
                ypt=r*math.cos(ang2-alpha)
                xd=rd*math.sin(ang2)
                yd=rd*math.cos(ang2)
                # i=0 時, 繪線起點由齒根圓上的點, 作為起點
                if(i==0):
                    last_x = midx+xd
                    last_y = midy-yd
                # 由右側齒根圓作為起點, 除第一點 (xd,yd) 齒根圓上的起點外, 其餘的 (xpt,ypt)則為漸開線上的分段點
                self.create_line((midx+xpt),(midy-ypt),(last_x),(last_y),fill=color)
                # 最後一點, 則為齒頂圓
                if(i==imax):
                    rfx=midx+xpt
                    rfy=midy-ypt
                last_x = midx+xpt
                last_y = midy-ypt
            # lfx 為齒頂圓上的左側 x 座標, lfy 則為 y 座標
            # 下列為齒頂圓上用來近似圓弧的直線
            self.create_line(lfx,lfy,rfx,rfy,fill=color)

# 準備在 id="gear3" 的 canvas 中繪圖
canvas = doc["gear3"]
ctx = canvas.getContext("2d")

# 模數決定齒的尺寸大小, 囓合齒輪組必須有相同的模數與壓力角
# 壓力角 pa 單位為角度
pa = 20
# 第1齒輪齒數
n_g1 = 17
# 第2齒輪齒數
n_g2 = 11
# 第3齒輪齒數
n_g3 = 13
# m 為模數, 根據畫布的寬度, 計算適合的模數大小
m = (0.8*canvas.width)/(n_g1+n_g2+n_g3)
# 根據模數 m, 計算各齒輪的節圓半徑
rp_g1 = m*n_g1/2
rp_g2 = m*n_g2/2
rp_g3 = m*n_g3/2
#單一正齒輪繪圖呼叫格式 Spur(ctx).Gear(x, y, r, n, pa, "blue")
# 開始繪製囓合齒輪輪廓
# 繪圖第1齒輪的圓心座標, 因為希望繪圖佔去 canvas.width 的 80%, 所以兩邊各預留 10% 距離
x_g1 = canvas.width*0.1+rp_g1
# y 方向繪圖區域上方預留 canvas.height 的 20%
y_g1 = canvas.height*0.2+rp_g1
# 第2齒輪的圓心座標, 假設排列成水平, 表示各齒輪圓心 y 座標相同
x_g2 = x_g1 + rp_g1 + rp_g2
y_g2 = y_g1
# 第3齒輪的圓心座標
x_g3 = x_g1 + rp_g1 + 2*rp_g2 + rp_g3
y_g3 = y_g1

# 將第1齒輪順時鐘轉 90 度, 也就是 math.pi/2
# 使用 ctx.save() 與 ctx.restore() 以確保各齒輪以相對座標進行旋轉繪圖
ctx.save()
# translate to the origin of second gear
ctx.translate(x_g1, y_g1)
# rotate to engage
ctx.rotate(math.pi/2)
# put it back
ctx.translate(-x_g1, -y_g1)
# 繪製第一個齒輪輪廓
Spur(ctx).Gear(x_g1, y_g1, rp_g1, n_g1, pa, "blue")
ctx.restore()

# 將第2齒輪逆時鐘轉 90 度之後, 再多轉一齒, 以便與第1齒輪進行囓合
ctx.save()
# translate to the origin of second gear
ctx.translate(x_g2, y_g2)
# rotate to engage
ctx.rotate(-math.pi/2-math.pi/n_g2)
# put it back
ctx.translate(-x_g2, -y_g2)
Spur(ctx).Gear(x_g2, y_g2, rp_g2, n_g2, pa, "black")
ctx.restore()

# 將第3齒輪逆時鐘轉 90 度之後, 再往回轉第2齒輪定位帶動轉角, 然後再逆時鐘多轉一齒, 以便與第2齒輪進行囓合
ctx.save()
# translate to the origin of second gear
ctx.translate(x_g3, y_g3)
# rotate to engage
# math.pi+math.pi/n_g2 為第2齒輪從順時鐘轉 90 度之後, 必須配合目前的標記線所作的齒輪 2 轉動角度, 要轉換到齒輪3 的轉動角度
# 必須乘上兩齒輪齒數的比例, 若齒輪2 大, 則齒輪3 會轉動較快
# 第1個 -math.pi/2 為將原先垂直的第3齒輪定位線逆時鐘旋轉 90 度
# -math.pi/n_g3 則是第3齒與第2齒定位線重合後, 必須再逆時鐘多轉一齒的轉角, 以便進行囓合
# (math.pi+math.pi/n_g2)*n_g2/n_g3 則是第2齒原定位線為順時鐘轉動 90 度, 
# 但是第2齒輪為了與第1齒輪囓合, 已經距離定位線, 多轉了 180 度, 再加上第2齒輪的一齒角度, 因為要帶動第3齒輪定位, 
# 這個修正角度必須要再配合第2齒與第3齒的轉速比加以轉換成第3齒輪的轉角, 因此乘上 n_g2/n_g3
ctx.rotate(-math.pi/2-math.pi/n_g3+(math.pi+math.pi/n_g2)*n_g2/n_g3)
# put it back
ctx.translate(-x_g3, -y_g3)
Spur(ctx).Gear(x_g3, y_g3, rp_g3, n_g3, pa, "red")
ctx.restore()
&lt;/script&gt;</summary><category term="syllabus"></category><category term="w11"></category></entry><entry><title>期中協同查驗與自評</title><link href="./2017spring-cd%20W10.html" rel="alternate"></link><published>2017-04-19T11:00:00+08:00</published><updated>2017-04-19T11:00:00+08:00</updated><author><name>40423211</name></author><id>tag:,2017-04-19:./2017spring-cd W10.html</id><summary type="html">&lt;h3&gt;一.四連桿機構協同 Trace Point 查驗&lt;/h3&gt;

&lt;h3&gt;二.繪製連桿機構並使他作動&lt;/h3&gt;



&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;一.
&lt;h3&gt;(1)利用solvespace進行點路徑的分析&lt;/h3&gt;
&lt;p&gt;&lt;img src="../data/1491897634328.png" width="480" /&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;(2)用Excel進行點的分析&lt;/h3&gt;
&lt;p&gt;&lt;img src="../data/1493131929161.png" width="800" /&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;(3)利用程式繪製路徑&lt;/h3&gt;
&lt;!-- 導入 Brython 標準程式庫 --&gt;&lt;/p&gt;
&lt;script type="text/javascript" src="https://cdn.rawgit.com/brython-dev/brython/master/www/src/brython_dist.js"&gt;
&lt;/script&gt;

&lt;!-- 啟動 Brython --&gt;

&lt;script&gt;
window.onload=function(){
brython(1);
}
&lt;/script&gt;

&lt;!-- 以下實際利用  Brython 畫四連桿 trace point 路徑--&gt;

&lt;canvas id="fourbar" width="600" height="400"&gt;&lt;/canvas&gt;

&lt;div id="container1"&gt;&lt;/div&gt;

&lt;script type="text/python3"&gt;
from browser import document as doc
from browser import html
import math
# 準備繪圖畫布
canvas = doc["fourbar"]
container1 = doc['container1']
ctx = canvas.getContext("2d")

fourbar_data = open("../data/40423211.csv").read()
fourbar_list = fourbar_data.splitlines()
#container1 &lt;= fourbar_list[0]
# 以下可以利用 ctx 物件進行畫圖
# 先畫一條直線
ctx.beginPath()
# 設定線的寬度為 1 個單位
ctx.lineWidth = 1
# 利用 transform 將 y 座標反轉, 且 offset canvas.height
# (X scale, X skew, Y skew, Y scale, X offset, Y offset)
# 配合圖形位置進行座標轉換
ctx.transform(1, 0, 0, -1, canvas.width/2+250, canvas.height/2+100)
# 畫出 x 與 y 座標線
# 各座標值放大 3倍
ratio = 3
ctx.moveTo(0, 0)
ctx.lineTo(-30*ratio, 0)
start_point = fourbar_list[0].split(",")
ctx.moveTo(float(start_point[0])*ratio, float(start_point[1])*ratio)
count = 0
for data in fourbar_list[1:]:
    point = data.split(",")
    #count = count + 1
    #container1 &lt;= str(count) + ":" + point[0] + "," + point[1]
    #container1 &lt;= html.BR()
    ctx.lineTo(float(point[0])*ratio, float(point[1])*ratio)
# 設定顏色為藍色, 也可以使用 "rgb(0, 0, 255)" 字串設定顏色值
ctx.strokeStyle = "blue"
# 實際執行畫線
ctx.stroke()
ctx.closePath()
&lt;/script&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h3&gt;影片&lt;/h3&gt;

&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/Uxu52BKjVnk" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;二.
&lt;h3&gt;(1)多連桿機構零件繪製&lt;/h3&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;影片&lt;/h3&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/1rK-meqic08" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3&gt;(2)多連桿機構零件組合&lt;/h3&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;影片&lt;/h3&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/4Q9AXYTjSDI" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3&gt;(3)多連桿機構零件作動&lt;/h3&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;影片&lt;/h3&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/wGXBj0ICEZ4" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;&lt;/p&gt;</summary><category term="syllabus"></category><category term="w10"></category></entry><entry><title>Week8 20170412</title><link href="./2017spring-cd%20W8.html" rel="alternate"></link><published>2017-04-12T11:00:00+08:00</published><updated>2017-04-12T11:00:00+08:00</updated><author><name>40423211</name></author><id>tag:,2017-04-12:./2017spring-cd W8.html</id><summary type="html">&lt;h3&gt;本周作業&lt;/h3&gt;

&lt;h3&gt;一.小組評分與個人評分&lt;/h3&gt;



&lt;p&gt;小組互評: https://pygroup-ag100.rhcloud.com&lt;/p&gt;
&lt;p&gt;個人自評: http://mde1a2.kmol.info:8000/k96tgzh1ofbl&lt;/p&gt;</summary><category term="syllabus"></category><category term="w8"></category></entry><entry><title>Week7 20170405</title><link href="./2017spring-cd%20W7.html" rel="alternate"></link><published>2017-04-05T11:00:00+08:00</published><updated>2017-04-05T11:00:00+08:00</updated><author><name>40423211</name></author><id>tag:,2017-04-05:./2017spring-cd W7.html</id><summary type="html">&lt;h3&gt;本周作業&lt;/h3&gt;

&lt;h3&gt;一.把Onshape繪製八連桿機構在v-rep中開啟，並使他作動。&lt;/h3&gt;

</summary><category term="syllabus"></category><category term="w7"></category></entry><entry><title>Week6 20170329</title><link href="./2017spring-cd%20W6.html" rel="alternate"></link><published>2017-03-29T11:00:00+08:00</published><updated>2017-03-29T11:00:00+08:00</updated><author><name>40423211</name></author><id>tag:,2017-03-29:./2017spring-cd W6.html</id><summary type="html">&lt;h3&gt;本周作業&lt;/h3&gt;

&lt;h3&gt;一.把Onshape繪製四連桿機構在v-rep中開啟，並使他作動。&lt;/h3&gt;



&lt;h3&gt;首先要繪製出四連桿機構所需要的零件&lt;/h3&gt;

&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/5FU8kXdqD6I" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h3&gt;在開啟組合圖將他們組合起來&lt;/h3&gt;

&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/7Gg2Bq9KA2M" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h3&gt;在開啟V-rep把組合完的四連桿機構置入，並使他作動。&lt;/h3&gt;

&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/SIe9ueZj5Es" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h3&gt;心得:經過上禮拜的練習已經熟練如何使用onshape繪製零件並組合起來，還有V-rep的作動，這禮拜的功課除了新使用的Dunny，其餘大致上來講已經沒有什麼難度了，相信在之後的作業也能越來越順利。&lt;/h3&gt;</summary><category term="syllabus"></category><category term="w6"></category></entry><entry><title>Week5 20170321</title><link href="./2017spring-cd%20W5.html" rel="alternate"></link><published>2017-03-21T11:00:00+08:00</published><updated>2017-03-21T11:00:00+08:00</updated><author><name>40423211</name></author><id>tag:,2017-03-21:./2017spring-cd W5.html</id><summary type="html">&lt;h3&gt;本周作業&lt;/h3&gt;

&lt;h3&gt;一.把Onshape繪製單連桿機構在v-rep中開啟，並使他作動。&lt;/h3&gt;



&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h3&gt;使用V-rep裡的Import/Mash將已經畫完的單連桿機構開啟&lt;/h3&gt;

&lt;p&gt;&lt;img src="../data/1491940207384.png" width="width="50%" height="50%" /
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;用object/item shift稍微調整X或Y軸&lt;/h3&gt;
&lt;h3&gt;以免等等叫出的馬達卡在機構中(記得單位是公尺)&lt;h3&gt;
&lt;p&gt;&lt;img src="../data/1491939137190.png" width="width="50%" height="50%" /
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;在旁邊白色地方處點滑鼠右鍵，點選add&gt;Joint&gt;Revolute將馬達開啟&lt;/h3&gt;
&lt;p&gt;&lt;img src="../data/1.png" width="width="50%" height="50%" /
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;在旁邊的馬達圖案點選兩下&lt;/h3&gt;
&lt;h3&gt;點選在右邊的Length和Diameter修改成自己需要的尺寸&lt;/h3&gt;
&lt;p&gt;&lt;img src="../data/2.png" width="width="50%" height="50%" /
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;點選左上角Edit&gt;Grouping/Merging&gt;Divide selected shapes&lt;/h3&gt;
&lt;h3&gt;將單連桿機構分成三個零件&lt;/h3&gt;
&lt;p&gt;&lt;img src="../data/3.png" width="width="50%" height="50%" /
&lt;p&gt;&lt;img src="../data/4.png" width="width="50%" height="50%" /
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;再來要將馬達移位至傳動軸的位置&lt;/h3&gt;
&lt;h3&gt;先點選在馬達 在按Ctrl點選傳動軸&lt;/h3&gt;
&lt;p&gt;&lt;img src="../data/5.png" width="width="50%" height="50%" /
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;再點選Object/Item裡的Apply to selection&lt;/h3&gt;
&lt;p&gt;&lt;img src="../data/6.png" width="width="50%" height="50%" /
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;之後馬達就會移位至傳動軸的位置&lt;/h3&gt;
&lt;p&gt;&lt;img src="../data/1491941849790.png" width="width="50%" height="50%" /
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;將傳動軸的零件抑制&lt;/h3&gt;
&lt;p&gt;&lt;img src="../data/7.png" width="width="50%" height="50%" /
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;並將上面的零件改成從動件&lt;/h3&gt;
&lt;p&gt;&lt;img src="../data/8.png" width="width="50%" height="50%" /
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;再來只要輸入自己所要的轉速就可以移動了&lt;/h3&gt;
&lt;p&gt;&lt;img src="../data/9.png" width="width="50%" height="50%" /
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;影片&lt;/h3&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/uxO4HiF6DaE" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3&gt;心得:第一次要將v-rep裡的單連桿機構作動耗費了我許多時間，但是在多次的操作下已經越來越清楚連桿機構作動的原理，在下次有關於v-rep的作業應該可以更快速地完成。&lt;/h3&gt;</summary><category term="syllabus"></category><category term="w5"></category></entry><entry><title>Week4 20170314</title><link href="./2017spring-cd%20W4.html" rel="alternate"></link><published>2017-03-14T11:00:00+08:00</published><updated>2017-03-14T11:00:00+08:00</updated><author><name>40423211</name></author><id>tag:,2017-03-14:./2017spring-cd W4.html</id><summary type="html">&lt;h3&gt;本週作業&lt;/h3&gt;

&lt;h3&gt;一.在Onshape繪製單連桿機構&lt;/h3&gt;

&lt;h3&gt;二.在SolveSpace繪製單連桿機構&lt;/h3&gt;



&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h3&gt;一.&lt;/h3&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h3&gt;繪製出所需零件 ，底座、軸及單連桿&lt;/h3&gt;

&lt;p&gt;&lt;img src="../data/1491924065245.png" width="width="70%" height="70%" /
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;並將其組立起來&lt;/h3&gt;
&lt;p&gt;&lt;img src="../data/1491923976248.png" width="width="25%" height="25%" /
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;影片&lt;/h3&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/eqm44sarkg4" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;二.&lt;/h3&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;繪製出所需零件 ，底座、軸及單連桿&lt;/h3&gt;
&lt;p&gt;&lt;img src="../data/1491924165953.png" width="800" /&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;並將其組立起來&lt;/h3&gt;
&lt;p&gt;&lt;img src="../data/1491924243593.png" width="width="50%" height="50%" /
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;影片&lt;/h3&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/H9Lxk_K4SlY" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;心得&lt;/h3&gt;
&lt;h3&gt;兩個繪圖軟體的鍵盤指令都不相同，在使用過程中很容易就搞混了，希望可以經過多次練習來習慣使用他們。&lt;/h3&gt;</summary><category term="syllabus"></category><category term="w4"></category></entry><entry><title>Week3 20170307</title><link href="./2017spring-cd%20W3.html" rel="alternate"></link><published>2017-03-07T11:00:00+08:00</published><updated>2017-03-07T11:00:00+08:00</updated><author><name>40423211</name></author><id>tag:,2017-03-07:./2017spring-cd W3.html</id><summary type="html">&lt;h3&gt;本週作業&lt;/h3&gt;

&lt;h3&gt;一.使用Onshape3D繪圖軟體30-50-60cm比例之四連桿機構,並以V-rep開啟&lt;/h3&gt;

&lt;h3&gt;二.使用solvespace學會畫出頂點的運動軌跡。&lt;/h3&gt;



&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h3&gt;一.&lt;/h3&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h3&gt;首先將各尺寸的連桿實體畫出&lt;/h3&gt;

&lt;p&gt;&lt;img src="../data/1491898085992.png" width="width="50%" height="50%" /&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;再開啟組合圖&lt;/h3&gt;
&lt;h3&gt;利用點與點的重合、線的共線及點與面的重合，限制桿子的作動&lt;/h3&gt;
&lt;p&gt;&lt;img src="../data/1491897996166.png" width="800" /&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;並匯出成STL檔&lt;/h3&gt;
&lt;p&gt;&lt;img src="../data/1491898384936.png" width="width="50%" height="50%" /&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;再使用V-rep裡的ImportMash開啟&lt;/h3&gt;
&lt;p&gt;&lt;img src="../data/1491898218971.png" width="800" /&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;影片&lt;/h3&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/qN7bP4QnZ-Q" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;二.&lt;/h3&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;先畫出30-50-60-60的四連桿草圖&lt;/h3&gt;
&lt;h3&gt;並在50桿子上畫出一正三角形&lt;/h3&gt;
&lt;p&gt;&lt;img src="../data/1491904964296.png" width="width="50%" height="50%" /&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;點選正三角形的頂點&lt;/h3&gt;
&lt;h3&gt;並利用Analyze裡的Trace point繪製出頂點的運動軌跡&lt;/h3&gt;
&lt;p&gt;&lt;img src="../data/1491897634328.png" width="width="50%" height="50%" /&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;可以在Excel中看到頂點運動軌跡的坐標&lt;/h3&gt;
&lt;p&gt;&lt;img src="../data/1491897672049.png" width="800" /&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;影片&lt;/h3&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/eqLS8OjwIgM" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3&gt;心得:在多次練習下，已經會熟練地使用onshape裡面的鍵盤指令，相信在之後有關於onshape作業可以更有效率地完成。&lt;/h3&gt;</summary><category term="syllabus"></category><category term="w3"></category></entry><entry><title>Week2 20170228</title><link href="./2017spring-cd%20W2.html" rel="alternate"></link><published>2017-02-28T11:00:00+08:00</published><updated>2017-02-28T11:00:00+08:00</updated><author><name>40423211</name></author><id>tag:,2017-02-28:./2017spring-cd W2.html</id><summary type="html">&lt;h3&gt;本週作業&lt;/h3&gt;

&lt;h3&gt;一.利用python找出缺課人員&lt;/h3&gt;

&lt;h3&gt;二.在SolveSpace畫出四連桿機構&lt;/h3&gt;



&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h3&gt;一.&lt;/h3&gt;

&lt;h3&gt;可以下載我們的課程範例中開啟w2b_cadlab看到有在上課填坐位表的修課學生&lt;/h3&gt;

&lt;p&gt;&lt;img src="../data/1491828314187.png" width="800" /&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;啟w2b_cadlab可以看到有修這一門課的學生&lt;/h3&gt;
&lt;p&gt;&lt;img src="../data/1491828335460.png" width="width="50%" height="50%" /&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;然後可以利用w2b_cadlab這裡面的程式碼來確認修課學生的缺曠課&lt;/h3&gt;
&lt;p&gt;&lt;img src="../data/1491827904947.png" width="800" /&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h3&gt;二.&lt;/h3&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h3&gt;先畫出30-50-60-60四連桿基本的尺寸&lt;/h3&gt;

&lt;p&gt;&lt;img src="../data/1491850950376.png" width="width="50%" height="50%" /&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;再50跟30之間畫出一條隨意尺寸的線延伸到外面&lt;/h3&gt;
&lt;h3&gt;方便等一下四連桿的做動&lt;/h3&gt;
&lt;p&gt;&lt;img src="../data/1491829109624.png" width="width="50%" height="50%" /&gt;
&lt;h3&gt;再開起課程範例裡的連桿&lt;/h3&gt;
&lt;h3&gt;利用點與點的重合、線的共線及點與面的重合，限制桿子的作動&lt;/h3&gt;
&lt;p&gt;&lt;img src="../data/1491829214980.png" width="width="50%" height="50%" /&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;組合完之後將四連桿機構儲存成STL檔&lt;/h3&gt;
&lt;h3&gt;再使用V-rep裡的Import/Mash開啟&lt;/h3&gt;
&lt;h3&gt;開啟時四連桿機構會鑲進地面&lt;/h3&gt;
&lt;p&gt;&lt;img src="../data/1491829268028.png" width="width="50%" height="50%" /&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;可以用object/item shift調整z軸高度(記得單位是公尺)&lt;/h3&gt;
&lt;p&gt;&lt;img src="../data/1491829303260.png" width="width="50%" height="50%" /&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;影片&lt;/h3&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/pohckQdL_1s" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;h3&gt;心得:利用python找出缺課人員再上有使用電腦的課程來進行點名的話似乎比雲端點名系統還要方便。&lt;/h3&gt;
&lt;h3&gt;使用SolveSpace畫出四連桿機構也算是複習上學期所使用的東西，希望在將來的課程中可以進階的使用到SolveSpace這個軟體。&lt;/h3&gt;</summary><category term="syllabus"></category><category term="w2"></category></entry><entry><title>Week1 20170221</title><link href="./2017spring-cd%20W1.html" rel="alternate"></link><published>2017-02-21T11:02:00+08:00</published><updated>2017-02-21T11:02:00+08:00</updated><author><name>40423211</name></author><id>tag:,2017-02-21:./2017spring-cd W1.html</id><summary type="html">&lt;h3&gt;本週作業&lt;/h3&gt;

&lt;h3&gt;一.解決在開啟start時發生的錯誤&lt;/h3&gt;



&lt;p&gt;&lt;img src="../data/1491825695927.png" width="width="50%" height="50%" /&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;發生錯誤的原因:&lt;/h3&gt;
&lt;h3&gt;Stunnel資料夾裡的Config/Styunnel.conf裡的IP和電腦的IP不同&lt;/h3&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;可以使用cmd裡使用ipconfig/all的指令找到電腦的IP位置&lt;/h3&gt;
&lt;p&gt;&lt;img src="../data/1491825725528.png" width="width="50%" height="50%" /&gt;
&lt;p&gt;&lt;img src="../data/1491825744932.png" width="800" /&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;並將其複製貼到Styunnel.conf裡&lt;/h3&gt;
&lt;p&gt;&lt;img src="../data/1491825778980.png" width="width="50%" height="50%" /&gt;
&lt;p&gt;&lt;img src="../data/1491825788615.png" width="800" /&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;影片&lt;/h3&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/El5B5GbT_JQ" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;心得:以前要找到自己電腦的IP位置都要從控制台裡的無線網路連線尋找
現在只要在cmd裡打上ipconfig/all這個指令就會出現了 真是方便&lt;/p&gt;</summary><category term="syllabus"></category><category term="w1"></category></entry></feed>